{"version":3,"sources":["context.js","useFlag.js","Flag/index.js","App.js","FlagProvider/index.js","reportWebVitals.js","index.js"],"names":["FlagContext","createContext","useFlag","name","store","useContext","Object","prototype","hasOwnProperty","call","Flag","children","propTypes","PropTypes","oneOfType","arrayOf","node","isRequired","string","App","className","src","alt","type","FlagProvider","Provider","useState","setStore","useEffect","a","logger","configcat","client","process","getAllValuesAsync","flagValues","flagStore","forEach","item","settingKey","settingValue","getFlags","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAIeA,EAFKC,wBAAc,ICSnBC,MARf,SAAiBC,GACf,IAAMC,EAAQC,qBAAWL,GACzB,QAAIM,OAAOC,UAAUC,eAAeC,KAAKL,EAAOD,IACvCC,EAAMD,I,OCFjB,SAASO,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,SAAUR,EAAQ,EAARA,KAExB,OADkBD,EAAQC,GAInB,mCAAGQ,IAFD,KAKXD,EAAKE,UAAY,CACfD,SAAUE,IAAUC,UAAU,CAACD,IAAUE,QAAQF,IAAUG,MAAOH,IAAUG,OAAOC,WACnFd,KAAMU,IAAUK,OAAOD,YAGVP,QCUAS,MAvBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,+CAEF,8BACE,qBAAKA,UAAU,eAAeC,IAAI,iCAAiCC,IAAI,mBAEzE,sBAAKF,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAgBG,KAAK,SAAvC,mBAGA,cAAC,EAAD,CAAMpB,KAAK,cAAX,SACE,wBAAQiB,UAAU,gBAAgBG,KAAK,SAAvC,wC,qCCYKC,MAzBf,YAAqC,IAAbb,EAAY,EAAZA,SACdc,EAAazB,EAAbyB,SAD0B,EAERC,mBAAS,IAFD,mBAE3BtB,EAF2B,KAEpBuB,EAFoB,KAkBlC,OAfAC,qBAAU,WAAM,4CACd,kCAAAC,EAAA,6DACQC,EAASC,IAA8B,GACvCC,EAASD,IAAuBE,gDAAyC,CAC7EH,WAHJ,SAK2BE,EAAOE,oBALlC,OAKQC,EALR,OAMQC,EAAY,GAClBD,EAAWE,SAAQ,SAACC,GAClBF,EAAUE,EAAKC,YAAcD,EAAKE,gBAEpCb,EAASS,GAVX,4CADc,uBAAC,WAAD,wBAadK,KACC,IACI,cAAChB,EAAD,CAAUiB,MAAOtC,EAAjB,SAAyBO,KCXnBgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fdbe1ce.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst FlagContext = createContext({});\n\nexport default FlagContext;\n","import { useContext } from 'react';\nimport FlagContext from './context';\n\nfunction useFlag(name) {\n  const store = useContext(FlagContext);\n  if (Object.prototype.hasOwnProperty.call(store, name)) {\n    return store[name];\n  }\n  return false;\n}\n\nexport default useFlag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useFlag from '../useFlag';\n\nfunction Flag({ children, name }) {\n  const flagValue = useFlag(name);\n  if (!flagValue) {\n    return null;\n  }\n  return <>{children}</>;\n}\n\nFlag.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Flag;\n","import React from 'react';\nimport './App.css';\nimport Flag from './Flag';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Keanu Clips</h1>\n      </header>\n      <div>\n        <img className=\"keanu__image\" src=\"https://placekeanu.com/640/360\" alt=\"keanu random\" />\n      </div>\n      <div className=\"keanu__actions\">\n        <button className=\"keanu__button\" type=\"button\">\n          Share\n        </button>\n        <Flag name=\"sharebutton\">\n          <button className=\"keanu__button\" type=\"button\">\n            Share with friend\n          </button>\n        </Flag>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as configcat from 'configcat-js';\nimport FlagContext from '../context';\n\nfunction FlagProvider({ children }) {\n  const { Provider } = FlagContext;\n  const [store, setStore] = useState({});\n  useEffect(() => {\n    async function getFlags() {\n      const logger = configcat.createConsoleLogger(3);\n      const client = configcat.createClient(process.env.REACT_APP_FF_CONFIG_CAT_KEY, {\n        logger,\n      });\n      const flagValues = await client.getAllValuesAsync();\n      const flagStore = {};\n      flagValues.forEach((item) => {\n        flagStore[item.settingKey] = item.settingValue;\n      });\n      setStore(flagStore);\n    }\n    getFlags();\n  }, []);\n  return <Provider value={store}>{children}</Provider>;\n}\n\nFlagProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default FlagProvider;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FlagProvider from './FlagProvider';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FlagProvider>\n      <App />\n    </FlagProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}